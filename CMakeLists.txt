cmake_minimum_required(VERSION 3.14)

if(NOT CMAKE_CXX_STANDARD OR CMAKE_CXX_STANDARD LESS 17)
    set(CMAKE_CXX_STANDARD 17)
endif()
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(Boost)
if(NOT Boost_FOUND)
    message(WARNING "Can't find Boot Library, please add boost_preprocessor/include in the current dir ${CMAKE_CURRENT_LIST_DIR} to your include_path.")
    add_subdirectory(boost_preprocessor)
endif()
include_directories(${CMAKE_CURRENT_LIST_DIR}/boost_preprocessor/include)

message("Currently only Qt supported.")
option(JSON_DESERIALISE_DEFAULT_JSON_LIBRARY "Default Json Library" OFF)
option(JSON_DESERIALISE_JSON_LIBRARIES "All libs that Need to be generated." OFF)

if(NOT JSON_DESERIALISE_JSON_LIBRARIES)
    if(NOT JSON_DESERIALISE_DEFAULT_JSON_LIBRARY)
        set(JSON_DESERIALISE_JSON_LIBRARIES "Qt")
    else(NOT JSON_DESERIALISE_JSON_LIBRARIES)
        set(JSON_DESERIALISE_JSON_LIBRARIES ${JSON_DESERIALISE_DEFAULT_JSON_LIBRARY})
    endif()
endif()

foreach(LIB_ID ${JSON_DESERIALISE_JSON_LIBRARIES})
    string(TOLOWER ${LIB_ID} lib)
    if(${LIB_ID} STREQUAL ${JSON_DESERIALISE_DEFAULT_JSON_LIBRARY})
        set(JSON_DESERIALISER_DEFAULT_MODE ON)
        configure_file(${CMAKE_CURRENT_LIST_DIR}/json_deserialise.h.in ${CMAKE_CURRENT_LIST_DIR}/json_deserialise.h)
    endif()
    string(APPEND LIB_ID "JsonLib")
    configure_file(${CMAKE_CURRENT_LIST_DIR}/type_deduction.h.in ${CMAKE_CURRENT_LIST_DIR}/type_deduction.${lib}.h)
    configure_file(${CMAKE_CURRENT_LIST_DIR}/basic_types.hpp.in ${CMAKE_CURRENT_LIST_DIR}/basic_types.${lib}.hpp)
    configure_file(${CMAKE_CURRENT_LIST_DIR}/macros.h.in ${CMAKE_CURRENT_LIST_DIR}/macros.${lib}.h)
    configure_file(${CMAKE_CURRENT_LIST_DIR}/decorator.h.in ${CMAKE_CURRENT_LIST_DIR}/decorator.${lib}.h)
    configure_file(${CMAKE_CURRENT_LIST_DIR}/json_deserialise.h.in ${CMAKE_CURRENT_LIST_DIR}/json_deserialise.${lib}.h)
    unset(JSON_DESERIALISER_DEFAULT_MODE)
endforeach()
